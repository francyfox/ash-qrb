name: build.yml
on:
  push:
    branches:
      - 'prototype'

jobs:
  build:
    name: Build artifacts and push to server
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      CI: true
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: oven-sh/setup-bun@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Create secrets
        run: |
          touch .env
          echo "${{secrets.SECRETS}}" >> .env
          cp ./.env ./apps/ash-client/
          cp ./.env ./apps/ash-qrb-server/
          mkdir ./docker/certs
          echo "${{secrets.CERT_CLOUDFLARE}}" >> ./docker/certs/cert.pem
          echo "${{secrets.PRIVATE_CLOUDFLARE}}" >> ./docker/certs/private.pem

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Copy frontend artifact
        run: |
          mkdir -p ./build/frontend
          mv ./apps/ash-client/dist/* ./build/frontend
          cp .env ./build/frontend/

      - name: Copy backend artifact
        run: |
          mkdir -p ./build/backend
          mv ./apps/ash-qrb-server/dist/* ./build/backend
          cp .env ./build/backend/.env

      - name: Copy docker
        run: |
          cp .env ./build
          mv ./docker ./build/docker
          cp docker-compose.prod.yml ./build/docker-compose.yml
          cp ./docker/backend.Dockerfile ./build/backend.Dockerfile
          cp ./docker/frontend.Dockerfile ./build/frontend.Dockerfile

      - name: Copy entrypoints
        run: |
          mv ./apps/ash-qrb-server/dump ./build/dump

      - name: Copy files to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.HOST }}
          username: ${{ secrets.SSH_USER }}
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          source: "build/*"
          target: "/home/fox/server"

  preview:
    needs: build
    name: Run docker compose on ssh server
    runs-on: ubuntu-latest
    steps:
      - name: deployment
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.SSH_USER }}@${{ vars.HOST }} <<EOF
            cd /home/fox/server/build
            docker-compose up -d

