services:
  postgres:
    container_name: ash-db
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - .env
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dump:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      ash-net:
    healthcheck:
      test: pg_isready -d postgres -U postgres
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s

  server:
    container_name: ash-backend
    restart: unless-stopped
    build:
      context: .
      dockerfile: backend.Dockerfile
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      ash-net:

  frontend:
    container_name: ash-frontend
    restart: unless-stopped
    build:
      context: .
      dockerfile: frontend.Dockerfile
    depends_on:
      - server
    env_file:
      - .env
#    env_file:
#      - ./apps/ash-client/.env.prod
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    networks:
      - ash-net

  tunnel:
    container_name: ash-client-tunnel
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    depends_on:
      - frontend
    networks:
      - ash-net

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"

volumes:
  postgres_data:

networks:
  ash-net: