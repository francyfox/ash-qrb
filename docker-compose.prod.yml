services:
  postgres:
    container_name: ash-db
    image: postgres:latest
    restart: unless-stopped
    env_file:
      - .env
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dump:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      ash-net:
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${PG_DB} -U $${PG_USER}" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: '0.001'
          memory: 128M

  server:
    container_name: ash-backend
    build:
      context: .
      dockerfile: backend.Dockerfile
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      ash-net:
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  frontend:
    container_name: ash-frontend
    build:
      context: .
      dockerfile: frontend.Dockerfile
    depends_on:
      - server
    env_file:
      - .env
#    env_file:
#      - ./apps/ash-client/.env.prod
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    networks:
      - ash-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

#  tunnel:
#    container_name: ash-client-tunnel
#    image: cloudflare/cloudflared
#    restart: unless-stopped
#    command: tunnel run
#    environment:
#      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
#    depends_on:
#      - frontend
#    networks:
#      - ash-net

volumes:
  postgres_data:

networks:
  ash-net: