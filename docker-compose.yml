services:
  redis:
    container_name: redis
    image: docker.io/bitnami/redis:8.0
    user: "${UID}:${GID}"
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=false
      - REDIS_AOF_ENABLED=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
      - REDIS_TLS_CERT_FILE=/tls/server.crt
      - REDIS_TLS_KEY_FILE=/tls/server.key
      - REDIS_TLS_CA_FILE=/tls/ca.crt
      - REDIS_TLS_ENABLED=false
      - REDIS_TLS_AUTH_CLIENTS=no
      - REDIS_TLS_PORT=6379
    volumes:
      - ./docker/certs/redis:/tls
      - predis_data:/bitnami/redis/data
    networks:
      local:

  postgres:
    container_name: ash-qrb-server-postgres
    image: postgres:latest
    shm_size: 128mb
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: /data/postgres
      POSTGRES_HOST_AUTH_METHOD: 'trust'  #      only for develop
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
#      - ./docker/entrypoint.db.sh:/docker-entrypoint-initdb.d/init.sh
      - ./apps/ash-qrb-server/drizzle:/docker-entrypoint-initdb.d
    networks:
      local:

volumes:
  postgres_data:
  predis_data:

networks:
  local: { }
  external: {}