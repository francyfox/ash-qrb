/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getIndex"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/s/upload/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postSUpload"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/s/private/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSPrivateUsers"];
        put?: never;
        post: operations["postSPrivateUsers"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/s/private/qrb": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSPrivateQrb"];
        put?: never;
        post: operations["postSPrivateQrb"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getHealth"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/s/private/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSPrivateUsersById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/s/private/qrb/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSPrivateQrbById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["patchSPrivateQrbById"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getIndex: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    postSUpload: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /**
                     * Format: binary
                     * @default File
                     */
                    file?: string;
                };
                "multipart/form-data": {
                    /**
                     * Format: binary
                     * @default File
                     */
                    file?: string;
                };
                "text/plain": {
                    /**
                     * Format: binary
                     * @default File
                     */
                    file?: string;
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        item: {
                            asset_id: string;
                            public_id: string;
                            version: number;
                            signature: string;
                            width: number;
                            height: number;
                            format: string;
                            created_at: string;
                            tags: string[];
                            bytes: number;
                            type: string;
                            etag: string;
                            placeholder: boolean;
                            url: string;
                            secure_url: string;
                            original_filename: string;
                        };
                    };
                    "multipart/form-data": {
                        item: {
                            asset_id: string;
                            public_id: string;
                            version: number;
                            signature: string;
                            width: number;
                            height: number;
                            format: string;
                            created_at: string;
                            tags: string[];
                            bytes: number;
                            type: string;
                            etag: string;
                            placeholder: boolean;
                            url: string;
                            secure_url: string;
                            original_filename: string;
                        };
                    };
                    "text/plain": {
                        item: {
                            asset_id: string;
                            public_id: string;
                            version: number;
                            signature: string;
                            width: number;
                            height: number;
                            format: string;
                            created_at: string;
                            tags: string[];
                            bytes: number;
                            type: string;
                            etag: string;
                            placeholder: boolean;
                            url: string;
                            secure_url: string;
                            original_filename: string;
                        };
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        title: string;
                        detail: string;
                    };
                    "multipart/form-data": {
                        title: string;
                        detail: string;
                    };
                    "text/plain": {
                        title: string;
                        detail: string;
                    };
                };
            };
        };
    };
    getSPrivateUsers: {
        parameters: {
            query?: {
                page?: number;
                pageSize?: number;
                order?: {
                    by: "ask" | "desc";
                };
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items: {
                            id: string;
                            publicId: string;
                            status: number | null;
                            image: string | null;
                            name: string;
                            companyName: string;
                            email: string | null;
                            emailVerified: boolean;
                            phone: string | null;
                            phoneVerified: boolean;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        }[];
                        count: number;
                    };
                    "multipart/form-data": {
                        items: {
                            id: string;
                            publicId: string;
                            status: number | null;
                            image: string | null;
                            name: string;
                            companyName: string;
                            email: string | null;
                            emailVerified: boolean;
                            phone: string | null;
                            phoneVerified: boolean;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        }[];
                        count: number;
                    };
                    "text/plain": {
                        items: {
                            id: string;
                            publicId: string;
                            status: number | null;
                            image: string | null;
                            name: string;
                            companyName: string;
                            email: string | null;
                            emailVerified: boolean;
                            phone: string | null;
                            phoneVerified: boolean;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        }[];
                        count: number;
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        title: string;
                        detail: string;
                    };
                    "multipart/form-data": {
                        title: string;
                        detail: string;
                    };
                    "text/plain": {
                        title: string;
                        detail: string;
                    };
                };
            };
        };
    };
    postSPrivateUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    user: {
                        id?: string;
                        publicId?: string;
                        status?: number | null;
                        image?: string | null;
                        name: string;
                        companyName: string;
                        email?: string | null;
                        emailVerified?: boolean;
                        phone?: string | null;
                        phoneVerified?: boolean;
                        createdAt?: Record<string, never> | null;
                        updatedAt?: Record<string, never> | null;
                    };
                };
                "multipart/form-data": {
                    user: {
                        id?: string;
                        publicId?: string;
                        status?: number | null;
                        image?: string | null;
                        name: string;
                        companyName: string;
                        email?: string | null;
                        emailVerified?: boolean;
                        phone?: string | null;
                        phoneVerified?: boolean;
                        createdAt?: Record<string, never> | null;
                        updatedAt?: Record<string, never> | null;
                    };
                };
                "text/plain": {
                    user: {
                        id?: string;
                        publicId?: string;
                        status?: number | null;
                        image?: string | null;
                        name: string;
                        companyName: string;
                        email?: string | null;
                        emailVerified?: boolean;
                        phone?: string | null;
                        phoneVerified?: boolean;
                        createdAt?: Record<string, never> | null;
                        updatedAt?: Record<string, never> | null;
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getSPrivateQrb: {
        parameters: {
            query?: {
                page?: number;
                pageSize?: number;
                order?: {
                    by: "ask" | "desc";
                };
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        items: {
                            id: string;
                            status: number | null;
                            name: string;
                            body: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                            qrCode: string | null;
                            qrCodeTerminal: string | null;
                            userId: string;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        }[];
                        count: number;
                    };
                    "multipart/form-data": {
                        items: {
                            id: string;
                            status: number | null;
                            name: string;
                            body: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                            qrCode: string | null;
                            qrCodeTerminal: string | null;
                            userId: string;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        }[];
                        count: number;
                    };
                    "text/plain": {
                        items: {
                            id: string;
                            status: number | null;
                            name: string;
                            body: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                            qrCode: string | null;
                            qrCodeTerminal: string | null;
                            userId: string;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        }[];
                        count: number;
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        title: string;
                        detail: string;
                    };
                    "multipart/form-data": {
                        title: string;
                        detail: string;
                    };
                    "text/plain": {
                        title: string;
                        detail: string;
                    };
                };
            };
        };
    };
    postSPrivateQrb: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    qrb: {
                        id?: string;
                        status?: number | null;
                        name: string;
                        body?: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                        qrCode?: string | null;
                        qrCodeTerminal?: string | null;
                        userId: string;
                        createdAt?: Record<string, never> | null;
                        updatedAt?: Record<string, never> | null;
                    };
                };
                "multipart/form-data": {
                    qrb: {
                        id?: string;
                        status?: number | null;
                        name: string;
                        body?: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                        qrCode?: string | null;
                        qrCodeTerminal?: string | null;
                        userId: string;
                        createdAt?: Record<string, never> | null;
                        updatedAt?: Record<string, never> | null;
                    };
                };
                "text/plain": {
                    qrb: {
                        id?: string;
                        status?: number | null;
                        name: string;
                        body?: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                        qrCode?: string | null;
                        qrCodeTerminal?: string | null;
                        userId: string;
                        createdAt?: Record<string, never> | null;
                        updatedAt?: Record<string, never> | null;
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getHealth: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getSPrivateUsersById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        item: {
                            id: string;
                            publicId: string;
                            status: number | null;
                            image: string | null;
                            name: string;
                            companyName: string;
                            email: string | null;
                            emailVerified: boolean;
                            phone: string | null;
                            phoneVerified: boolean;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        };
                    };
                    "multipart/form-data": {
                        item: {
                            id: string;
                            publicId: string;
                            status: number | null;
                            image: string | null;
                            name: string;
                            companyName: string;
                            email: string | null;
                            emailVerified: boolean;
                            phone: string | null;
                            phoneVerified: boolean;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        };
                    };
                    "text/plain": {
                        item: {
                            id: string;
                            publicId: string;
                            status: number | null;
                            image: string | null;
                            name: string;
                            companyName: string;
                            email: string | null;
                            emailVerified: boolean;
                            phone: string | null;
                            phoneVerified: boolean;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        };
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        title: string;
                        detail: string;
                    };
                    "multipart/form-data": {
                        title: string;
                        detail: string;
                    };
                    "text/plain": {
                        title: string;
                        detail: string;
                    };
                };
            };
        };
    };
    getSPrivateQrbById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        item: {
                            id: string;
                            status: number | null;
                            name: string;
                            body: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                            qrCode: string | null;
                            qrCodeTerminal: string | null;
                            userId: string;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        };
                    };
                    "multipart/form-data": {
                        item: {
                            id: string;
                            status: number | null;
                            name: string;
                            body: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                            qrCode: string | null;
                            qrCodeTerminal: string | null;
                            userId: string;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        };
                    };
                    "text/plain": {
                        item: {
                            id: string;
                            status: number | null;
                            name: string;
                            body: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                            qrCode: string | null;
                            qrCodeTerminal: string | null;
                            userId: string;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        };
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        title: string;
                        detail: string;
                    };
                    "multipart/form-data": {
                        title: string;
                        detail: string;
                    };
                    "text/plain": {
                        title: string;
                        detail: string;
                    };
                };
            };
        };
    };
    patchSPrivateQrbById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        item: {
                            id: string;
                            status: number | null;
                            name: string;
                            body: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                            qrCode: string | null;
                            qrCodeTerminal: string | null;
                            userId: string;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        };
                    };
                    "multipart/form-data": {
                        item: {
                            id: string;
                            status: number | null;
                            name: string;
                            body: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                            qrCode: string | null;
                            qrCodeTerminal: string | null;
                            userId: string;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        };
                    };
                    "text/plain": {
                        item: {
                            id: string;
                            status: number | null;
                            name: string;
                            body: ((string | number | boolean | null) | unknown[] | Record<string, never>) | null;
                            qrCode: string | null;
                            qrCodeTerminal: string | null;
                            userId: string;
                            createdAt: Record<string, never> | null;
                            updatedAt: Record<string, never> | null;
                        };
                    };
                };
            };
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        title: string;
                        detail: string;
                    };
                    "multipart/form-data": {
                        title: string;
                        detail: string;
                    };
                    "text/plain": {
                        title: string;
                        detail: string;
                    };
                };
            };
        };
    };
}
